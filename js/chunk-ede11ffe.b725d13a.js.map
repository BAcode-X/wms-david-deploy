{"version":3,"sources":["webpack:///../../../src/components/VGrid/VSpacer.ts","webpack:///../../../src/components/VForm/VForm.ts","webpack:///../../../src/mixins/button-group/index.ts","webpack:///../../../src/components/VBtnToggle/VBtnToggle.ts","webpack:///../../../src/components/VTextarea/VTextarea.ts","webpack:///../../../src/components/VCheckbox/VCheckbox.ts","webpack:///./src/@core/comp-functions/ui.js"],"names":["name","provide","form","this","inheritAttrs","props","disabled","lazyValidation","readonly","value","Boolean","data","inputs","watchers","errorBag","watch","handler","errors","Object","deep","immediate","methods","watchInput","watcher","input","val","_uid","valid","shouldValidate","validate","filter","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","find","i","unwatch","render","h","staticClass","attrs","novalidate","attrs$","on","submit","e","$slots","btnToggle","computed","classes","genData","mixins","backgroundColor","borderless","dense","group","rounded","shaped","tile","themeClasses","setTextColor","setBackgroundColor","baseMixins","autoGrow","noResize","rowHeight","type","Number","default","validator","v","isNaN","parseFloat","rows","parseInt","noResizeHandle","lazyValue","$nextTick","mounted","calculateInputHeight","$refs","height","minHeight","Math","genInput","onInput","onKeyDown","isFocused","indeterminate","indeterminateIcon","offIcon","onIcon","inputIndeterminate","computedIcon","validationState","isDisabled","hasError","hasColor","isActive","genCheckbox","checkboxAttrs","$createElement","dark","light","toString","genRipple","genDefaultSlot","useResponsiveLeftSidebar","sidebarWidth","isLeftSidebarOpen","ref","$vuetify","getVuetify","setInitialValue","breakpoint","smAndDown","mdAndUp","contentStyles","styles","marginDirection","rtl"],"mappings":"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","file":"js/chunk-ede11ffe.b725d13a.js","sourcesContent":["import './_grid.sass'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nexport default createSimpleFunctional('spacer', 'div', 'v-spacer')\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","// Extensions\nimport { BaseItemGroup } from '../../components/VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'button-group',\n\n  provide (): object {\n    return {\n      btnToggle: this,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return BaseItemGroup.options.computed.classes.call(this)\n    },\n  },\n\n  methods: {\n    // Isn't being passed down through types\n    genData: BaseItemGroup.options.methods.genData,\n  },\n})\n","// Styles\nimport './VBtnToggle.sass'\n\n// Mixins\nimport ButtonGroup from '../../mixins/button-group'\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  ButtonGroup,\n  Colorable\n).extend({\n  name: 'v-btn-toggle',\n\n  props: {\n    backgroundColor: String,\n    borderless: Boolean,\n    dense: Boolean,\n    group: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...ButtonGroup.options.computed.classes.call(this),\n        'v-btn-toggle': true,\n        'v-btn-toggle--borderless': this.borderless,\n        'v-btn-toggle--dense': this.dense,\n        'v-btn-toggle--group': this.group,\n        'v-btn-toggle--rounded': this.rounded,\n        'v-btn-toggle--shaped': this.shaped,\n        'v-btn-toggle--tile': this.tile,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genData () {\n      const data = this.setTextColor(this.color, {\n        ...ButtonGroup.options.methods.genData.call(this),\n      })\n\n      if (this.group) return data\n\n      return this.setBackgroundColor(this.backgroundColor, data)\n    },\n  },\n})\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n","// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      const { title, ...checkboxAttrs } = this.attrs$\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...checkboxAttrs,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n","import { getVuetify } from '@core/utils';\nimport { computed, ref, watch } from '@vue/composition-api';\n\nexport const useResponsiveLeftSidebar = ({ sidebarWidth }) => {\n  const isLeftSidebarOpen = ref(true);\n  const $vuetify = getVuetify();\n\n  const setInitialValue = () => {\n    if ($vuetify.breakpoint.smAndDown) isLeftSidebarOpen.value = false;\n    else isLeftSidebarOpen.value = true;\n  };\n\n  // Set the initial value of sidebar\n  setInitialValue();\n\n  watch(\n    () => $vuetify.breakpoint.name,\n    () => {\n      // Reset left sidebar\n      if ($vuetify.breakpoint.smAndDown) isLeftSidebarOpen.value = false;\n      if ($vuetify.breakpoint.mdAndUp) isLeftSidebarOpen.value = true;\n    },\n  );\n\n  const contentStyles = computed(() => {\n    const styles = {};\n\n    const marginDirection = $vuetify.rtl ? 'marginRight' : 'marginLeft';\n\n    styles[marginDirection] = isLeftSidebarOpen.value && $vuetify.breakpoint.mdAndUp ? `${sidebarWidth}px` : null;\n\n    return styles;\n  });\n\n  return {\n    isLeftSidebarOpen,\n    contentStyles,\n  };\n};\n\nexport const _ = {};\n"],"sourceRoot":""}